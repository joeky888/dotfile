# Save this to ~/.tmux.conf

# unbind C-b # I need to use Ctrl B in vim
set -g set-clipboard off # Prevent ramdom/garbled characters
# set -g prefix C-0 # Actually this doesn't work
set-option -g status-bg default # gray
set-option -g status-fg default
set -g status-left-length 256
set -g status-right-length 256
set -g status-right "CPU:#(ps -A -o '%%cpu' | awk '{s+=$1} END {print s \"%%\"}') #[fg=black]#[bg=white]#(curl -ksf 'http://ipinfo.io/ip')#[fg=white]#[bg=default] %m/%d/%Y %I:%M:%p"
# set -g status-left "#[bg=colour10]#[fg=colour233][#S]"
set -g status-left ""
# set -g status-right " #[fg=black]#[bg=white]#(curl -s -L https://www.google.com/search?q=what+is+my+IP+address | grep '.*IP address:' | sed 's/^.*IP address: //' | sed 's/<br>.*$//' | sed 's/^[^0-9]*//' | sed 's/[^0-9]*$//' || echo 'No internet connection')#[fg=white]#[bg=colour233] %m/%d/%Y #[fg=white]#[bg=colour233]%I:%M:%p"
# set-option -g status-attr default
# set-window-option -g window-status-bg default # blue
# set-window-option -g window-status-fg default
# set-window-option -g window-status-current-bg default # orange
# set-window-option -g window-status-current-fg default
setw -g window-status-current-format '#[fg=colour9,reverse]#[bg=default]#[fg=white,noreverse]#[bg=colour9] #{window_index} #[fg=colour9]#[bg=default]'
setw -g window-status-format '#[fg=colour4,reverse]#[bg=default]#[fg=white,noreverse]#[bg=colour4] #{window_index} #[fg=colour4]#[bg=default]'
# set -ag status-left ""
# setw -g window-status-format '#[attr=default]  #[fg=white]#{window_index} #[fg=default]#[bg=default] '
# setw -g window-status-current-format '#[fg=colour4]#[bg=colour9]#[fg=white]#[bg=colour9] #{window_index} #[fg=default]#[bg=default]'
# setw -g window-status-format '#[bg=colour4]  #[fg=white]#{window_index} #[fg=colour4]#[bg=colour4] '
set -g window-status-separator '' # remove space between window titles
set-window-option -g xterm-keys on # Set terminal emulator to receive xterm keys
#set-option -g pane-border-fg default
#set-option -g pane-active-border-fg default
#set-option -g message-bg default
#set-option -g message-fg default
#set-option -g display-panes-active-colour default
#set-option -g display-panes-colour default
#set-window-option -g clock-mode-colour default
setw -g automatic-rename off
set-option -g allow-rename off
setw -g mode-keys vi # Vi key bind in copy mode
set -g status-keys vi
set-option -g history-limit 100000 # Increase the history-buffer size
set-option -g renumber-windows on # reorder windows when one is deleted
set -s escape-time 0 # Make ESC faster
# bind-key -n F2 new-window -c "#{pane_current_path}" \; rename-window "-"
# bind-key -n C-F3 select-pane -U
# bind-key -n M-F3 select-pane -U
# bind-key -n C-F4 select-pane -D
# bind-key -n M-F4 select-pane -D
# bind-key -n C-t new-window -c "#{pane_current_path}" \; rename-window "-"
bind-key | split-window -h \; select-layout even-horizontal
bind-key - split-window -v \; select-layout even-vertical
bind-key + split-window -h \; split-window -v \; select-pane -L \; split-window -v \; select-pane -U
bind-key Up select-pane -U
bind-key Down select-pane -D
bind-key Left select-pane -L
bind-key Right select-pane -R
bind-key -n F6 detach
bind-key -n F7 copy-mode
bind-key -n C-t new-window -c "#{pane_current_path}"
# bind-key -n M-t split -v -c "#{pane_current_path}" \; select-layout even-vertical
bind-key -n C-Right next-window
bind-key -n C-Left previous-window
# bind-key -n C-Up select-pane -U
# bind-key -n M-Up select-pane -U
# bind-key -n C-Down select-pane -D
# bind-key -n M-Down select-pane -D
# set -ga terminal-overrides ',xterm*:XT:smcup@:rmcup@' # Use default terminal scrolling
# set-option -g default-shell "/bin/zsh"
# set-option -g default-command "tmux rename-window '-'; if [ $(command -v zsh) ]; then exec zsh; else exec bash; fi;"
set-option -g default-command '\
if [ $(command -v fish) ] && [ "$OSTYPE" = "cygwin" ];\
  then exec fish;\
elif [ $(command -v fish) ] && [ "$OSTYPE" = "linux-android" ];\
  then exec fish;\
elif [ $(command -v zsh) ];\
  then exec zsh;\
else\
  exec bash; fi;'
# Copy-mode color
set -wg mode-style bg=colour4,fg=default

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
run-shell "tmux setenv -g TMUX_FBTERM $([ $(command -v gpm) ] || [ -f /usr/sbin/gpm ] || [ -f /sbin/gpm ] && [ -z $DISPLAY ] && [ -z $DESKTOP_SESSION ] && echo 1)"

# Tmux version under 2.1
if-shell -b '[ `tmux -V | cut -d" " -f2 | tr -d ".|[:alpha:]"` -lt 21 ] && [ -z "$TMUX_FBTERM" ]' \
  'set mode-mouse on; \
    set mouse-resize-pane on; \
    set mouse-select-pane on; \
    set mouse-select-window on'

if-shell -b '[ `tmux -V | cut -d" " -f2 | tr -d ".|[:alpha:]"` -ge 21 ] && [ -z "$TMUX_FBTERM" ]' \
  'set mouse on'

if-shell -b '[ $TMUX_FBTERM = 1 ]' \
  'set mouse off; \
    bind-key -n F2 new-window -c "#{pane_current_path}"; \
    bind-key -n F3 previous-window; \
    bind-key -n F4 next-window; \
    bind-key -n F5 refresh'

# Tmux version under 2.4
if-shell -b "[ `tmux -V | cut -d' ' -f2 | tr -d '.|[:alpha:]'` -lt 24 ]" \
  'bind-key -t vi-copy v begin-selection; \
    bind-key -t vi-copy Q cancel; \
    bind-key -t vi-copy Enter cancel; \
    bind-key -t vi-copy C-c copy-pipe "cat > ${HOME}/.vim/clipboard.txt"; \
    bind-key -t vi-copy C-f search-forward; \
    bind-key -t vi-copy C-a start-of-line; \
    bind-key -t vi-copy C-g send-keys ggVG; \
    bind-key -t vi-copy C-e end-of-line; \
    bind-key -t vi-copy C-w cancel'

# Tmux version over 2.4
if-shell -b "[ `tmux -V | cut -d' ' -f2 | tr -d '.|[:alpha:]'` -ge 24 ]" \
  'bind-key -T copy-mode-vi MouseDown1Pane send-keys -X copy-pipe "cat > ${HOME}/.vim/clipboard.txt && chmod 777 $HOME/.vim/clipboard.txt" \; send-keys -X clear-selection; \
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "cat > ${HOME}/.vim/clipboard.txt && chmod 777 $HOME/.vim/clipboard.txt"; \
bind-key -T copy-mode-vi DoubleClick1Pane select-pane \; send-keys -X select-word \; send-keys -X copy-pipe "cat > ${HOME}/.vim/clipboard.txt && chmod 777 $HOME/.vim/clipboard.txt"; \
bind-key -T copy-mode-vi PageUp     send-keys -X halfpage-up; \
bind-key -T copy-mode-vi PageDown   send-keys -X halfpage-down; \
bind-key -T copy-mode-vi v     send-keys -X begin-selection; \
bind-key -T copy-mode-vi Q     send-keys -X cancel; \
bind-key -T copy-mode-vi Enter send-keys -X cancel; \
bind-key -T copy-mode-vi C-q   send-keys -X rectangle-toggle \; send-keys -X begin-selection; \
bind-key -T copy-mode-vi C-g   send-keys ggVG; \
bind-key -T copy-mode-vi C-c   send-keys -X copy-pipe "cat > ${HOME}/.vim/clipboard.txt && chmod 777 $HOME/.vim/clipboard.txt"; \
bind-key -T copy-mode-vi C-v   send-keys -X cancel; \
bind-key -T copy-mode-vi C-f   command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""; \
bind-key -T copy-mode-vi C-a   send-keys -X start-of-line; \
bind-key -T copy-mode-vi C-e   send-keys -X end-of-line; \
bind-key -T copy-mode-vi C-w   send-keys -X cancel; \
bind-key -T copy-mode-vi C-u   send-keys -X halfpage-up; \
bind-key -T copy-mode-vi C-j   send-keys -X halfpage-down; \
bind-key -T copy-mode-vi C-l   send-keys -X select-line'

# Remove CR+LF line endings
# $ perl -pi -e 's/\r$//' ~/.tmux.conf
# Print all colors
# $ for i in {0..255}; do printf "\x1b[38;5;${i}mcolour${i}\n"; done
# $ for i in {0..255}; do echo -e "\e[38;05;${i}m${i}"; done
